# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'vert-base3.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # run again.  Do not edit this file unless you know what you are doing.



#AUTHORS : Célestin Robert & Pierre Massy

#V.3.6 --> Le Juste Tri

#  IMPORTANT !! --> POUR FAIRE FONCTIONER LE CAPTEUR RFID RC522 avec l'arduino --> https://github.com/Cgaming14/LE-JUSTE-TRI                                                                                                                  




import serial   #import de la libbrairie serial pour lire le port série de l'arduino
import sqlite3  #import de la librairie sqlite3 pour lire la base de données

connection =  sqlite3.connect('base3.db')           #connexion à la base de données
cursor = connection.cursor()
serialArduino = serial.Serial('/dev/ttyACM0', 9600) #indique où se trouve le port série de l'arduino et sa vitesse de transfert en bauds



if 1==1 :
    
    nbid = serialArduino.readline() #lecture de la valeur lu par le capteur rfid connecté a l'arduino
    print(nbid)                     #afficher le code de la carte scannée
    if nbid == b'36915432\r\n' :    #si le code  = 36915432 alors a = 1 
        a = 1
    if nbid == b'75DAE02C\r\n' :    #si le code  = 75DAE02C alors a = 2 
        a = 2
    if nbid == b'7C49532\r\n' :     #si le code  = 7C49532 alors a = 3
        a = 3
    if nbid == b'DC217533\r\n' :    #si le code  = DC217533 alors a = 4
        a = 4



    

if a == 1: #si a = 1 

    req = cursor.execute('SELECT user_point FROM users WHERE id = 1') #on vas chercher le nombre de points de l'utilisateur 1 dans la base de données
    compte = req.fetchone()
    print(compte[0])
    compte2 = (compte[0] + 10)#on ajoute 10 points aux points actuel de l'utilisateur
    print(compte2)
    
    add = cursor.execute('UPDATE users SET user_point = ? WHERE id = 1',(compte2,))#on met à jour la modification du nb de points
    req2 = cursor.execute('SELECT user_name, user_point FROM users WHERE id = 1')#on cherche comment s'appelle l'utilisateur 1 et combien il a de points apres la mise à jour
    vent = req2.fetchone()
    print(vent[0])
    print(vent[1])

    print("Vous avez gagnez 10 points !")
    prenom = vent[0] 
    nbpoints = vent[1]

if a == 2 :
    req3 = cursor.execute('SELECT user_point FROM users WHERE id = 2') #répition pour les différentes cartes enregistrées (répétition --> simplifiable...)
    compte3 = req3.fetchone()
    print(compte3[0])
    compte4 = (compte3[0] + 10)
    print(compte4)
    add2 = cursor.execute('UPDATE users SET user_point = ? WHERE id = 2',(compte4,))
    req4 = cursor.execute('SELECT user_name,user_point FROM users WHERE id = 2')
    vent2 = req4.fetchone()
    print(vent2[0])
    print("Vous avez gagnez 10 points !")
    prenom = vent2[0]
    nbpoints = vent2[1] 

if a == 3 :
    req5 = cursor.execute('SELECT user_point FROM users WHERE id = 3') #répition pour les différentes cartes enregistrées (répétition --> simplifiable...)
    compte5 = req5.fetchone()
    print(compte5[0])
    compte6 = (compte5[0] + 10)
    print(compte6)
    add3 = cursor.execute('UPDATE users SET user_point = ? WHERE id = 3',(compte6,))
    req6 = cursor.execute('SELECT user_name,user_point FROM users WHERE id = 3')
    vent3 = req6.fetchone()
    print(vent3[0])
    print("Vous avez gagnez 10 points !")  
    prenom = vent3[0] 
    nbpoints = vent3[1]   

if a == 4 :
    req7 = cursor.execute('SELECT user_point FROM users WHERE id = 4') #répition pour les différentes cartes enregistrées (répétition --> simplifiable...)
    compte7 = req7.fetchone()
    print(compte7[0])
    compte8 = (compte7[0] + 10)
    print(compte8)
    add4 = cursor.execute('UPDATE users SET user_point = ? WHERE id = 4',(compte8,))
    req8 = cursor.execute('SELECT user_name,user_point FROM users WHERE id = 4')
    vent4 = req8.fetchone()
    print(vent4[0])
    print("Vous avez gagnez 10 points !") 
    prenom = vent4[0] 
    nbpoints = vent4[1]

    
connection.commit()#application des mise à jour des valeurs sur la base de donn�es



connection.close()#fermeture de la base de données





















from PyQt5 import QtCore, QtGui, QtWidgets


#imortation du module playsound pour lire un son 
from playsound import playsound




class Ui_MainWindow(object):
# def fonction quand le bouton "cheatcode" est pressé  
    def handleButton(self,):
        global nbpoints 
        nbpoints = nbpoints + 5
        print(nbpoints)
        # afficher les points  
        self.lcdNumber.setProperty("value", nbpoints)
     
        # si le nombre de points est égale a 100 lecture du jingle audio 
      
        if nbpoints >= 100 :
            playsound('audio.mp3')
            #retour du nombre de points a 0
            nbpoints = 0



# partie graphique faites avec logiciel qt designer 

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.showFullScreen()
        font = QtGui.QFont()
        font.setFamily("Roman")
        MainWindow.setFont(font)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(220, 461, 500, 78))
        font = QtGui.QFont()
        font.setFamily("OCR A Extended")
        font.setPointSize(26)
        self.label.setFont(font)
        self.label.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label.setScaledContents(False)
        self.label.setObjectName("label")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(1430, 490, 281, 151))
        self.lcdNumber.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.lcdNumber.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.lcdNumber.setFrameShadow(QtWidgets.QFrame.Raised)
        self.lcdNumber.setSmallDecimalPoint(False)
        self.lcdNumber.setProperty("value",nbpoints)
        self.lcdNumber.setObjectName("lcdNumber")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(30, 470, 510, 61))
        self.textBrowser_2.setAutoFillBackground(True)
        self.textBrowser_2.setStyleSheet("background-color: rgb(45, 182, 136);")
        self.textBrowser_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_3.setGeometry(QtCore.QRect(1330, 370, 481, 111))
        self.textBrowser_3.setAutoFillBackground(True)
        self.textBrowser_3.setStyleSheet("background-color: rgb(40, 177, 131);\n"
"")
        self.textBrowser_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 1920, 1080))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.label_2.setFont(font)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap(":/newPrefix/fondecran.jpg"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_4.setGeometry(QtCore.QRect(810, 920, 301, 51))
        font = QtGui.QFont()
        font.setFamily("Fixedsys")
        self.textBrowser_4.setFont(font)
        self.textBrowser_4.setStyleSheet("background-color: rgb(45, 181, 135);")
        self.textBrowser_4.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_5.setGeometry(QtCore.QRect(740, 30, 451, 151))
        self.textBrowser_5.setStyleSheet("background-color: rgb(81, 204, 162);")
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 1000, 75, 24))
        self.pushButton.clicked.connect(self.handleButton)     # lecture de la fonction  handlebuton quand le bouton est press�
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(33, 173, 126);")
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.label_2.raise_()
        self.lcdNumber.raise_()
        self.textBrowser_2.raise_()
        self.textBrowser_3.raise_()
        self.label.raise_()
        self.textBrowser_4.raise_()
        self.textBrowser_5.raise_()
        self.pushButton.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1920, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow",prenom,))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt;\">Votre nom :</span></p></body></html>"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt;\">Votre nombre de points :</span></p></body></html>"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Fixedsys\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Segoe UI\'; font-size:16pt; font-style:italic;\">Pierre-C\u00e9lestin-Brieuc-Bradley</span></p></body></html>"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt;\">Bienvenue </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt;\">au juste tri !</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "cheatcode"))
        
        
        
import sourcev3  #importation de sourcev3 qui contient le fichier photo(pour le fond ecran)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

